Agora a pr√°tica
‚ö†Ô∏è Para fazer os exerc√≠cios a seguir, voc√™ deve utilizar o projeto com o texto no arquivo .txt , localizado dentro do diret√≥rio do dia anterior, crie uma c√≥pia para usar no dia de hoje.
Dessa vez, cada um deve fazer os exerc√≠cios em seu computador, ok? Vamos l√°! üòã
1 - Navegue at√© a raiz do projeto com o arquivo .txt;
2 - Verifique se n√£o existe nada sem "commitar" utilizando git status :
3 - Caso exista algo, verifique se √© necess√°rio e fa√ßa o commit , ou remova-o.
4 - Crie uma nova branch com o nome trybe-skills-changes e fa√ßa checkout nela;
5 - No arquivo .txt , ao final da lista de habilidades , adicione mais duas habilidades que ser√£o desenvolvidas na Trybe:
	Fa√ßa um git add nome-do-arquivo.extensao ;
	Voc√™ pode adicionar todos os arquivos que voc√™ modificou usando git add . , mas evite isso em commits com muitos arquivos para n√£o adicionar nenhuma altera√ß√£o por engano;
	Agora um git commit -m "Mensagem que voc√™ gostaria" ;
	Uma boa pr√°tica √© sempre resumir o que o seu commit est√° alterando, por exemplo, git commit -m "Adiciona nova skill" ;
	Evite juntar muitas modifica√ß√µes em um √∫nico commit. Assim, caso haja algum erro no c√≥digo, ficar√° mais f√°cil visualizar em qual altera√ß√£o ele surgiu;
	E por √∫ltimo um git push -u origin trybe-skills-changes ;
	
6 - Abra um Pull Request com uma descri√ß√£o detalhada:
	D√™ contexto para o que voc√™ est√° fazendo, passe links ou cite especifica√ß√µes que forem relevantes. Ex: "Trabalho feito para a semana 1 do curso de Software Developer da Trybe. Aqui, o desafio foi... E para resolver o problema fizemos... E o resultado foi..." ;
	O merge deve ser feito apenas quando chegar no exerc√≠cio 10.

Resolu√ß√£o 


